import numpy as np
import tkinter as tk
from tkinter import messagebox

def giai_he_pt_tuyen_tinh(A, B):
    try:
        x = np.linalg.solve(A, B)
        return x
    except np.linalg.LinAlgError:
        return None

def giai_pt_button_click():
    try:
        num_equations = int(num_equations_var.get())
        num_unknowns = int(num_unknowns_var.get())

        A_values = []
        for i in range(num_equations):
            row_values = []
            for j in range(num_unknowns):
                entry_value = A_entries[i][j][0].get()  # Lấy giá trị từ Entry
                try:
                    entry_value = float(entry_value)
                    row_values.append(entry_value)
                except ValueError:
                    messagebox.showerror("Lỗi", f"Giá trị không hợp lệ ở hàng {i + 1}, cột {j + 1}.")
                    return
            A_values.append(row_values)

        A = np.array(A_values)
        B = np.array([float(b_entries[i][0].get()) for i in range(num_equations)])

        ket_qua = giai_he_pt_tuyen_tinh(A, B)

        if ket_qua is not None:
            #messagebox.showinfo("Kết Quả", f" Vecto nghiệm của hệ phương trình là: {ket_qua}")
            hien_thi_bang_nghiem(ket_qua);
        else:
            messagebox.showinfo("Lỗi", "Hệ phương trình có vô số nghiệm hoặc không có nghiệm.")
    except ValueError:
        messagebox.showerror("Lỗi", "Vui lòng nhập đúng giá trị số.")



def update_entries():
    num_equations = int(num_equations_var.get())
    num_unknowns = int(num_unknowns_var.get())

    for entry_list in A_entries:
        for entry, label in entry_list:
            entry.destroy()
            label.destroy()

    for entry, label in b_entries:
        entry.destroy()
        label.destroy()

    A_entries.clear()
    b_entries.clear()

    create_entries()


# Tạo cửa sổ chính
root = tk.Tk()
root.title("Giải Hệ Phương Trình Tuyến Tính")

# Tạo nhãn và ô nhập liệu cho số lượng phương trình
num_equations_label = tk.Label(root, text="Số phương trình:")
num_equations_label.grid(row=2, column=0)
num_equations_var = tk.StringVar()
num_equations_spinbox = tk.Spinbox(root, from_=1, to=10, textvariable=num_equations_var, command=update_entries)
num_equations_spinbox.grid(row=2, column=1)

# Tạo nhãn và ô nhập liệu cho số lượng ẩn
num_unknowns_label = tk.Label(root, text="Số ẩn:")
num_unknowns_label.grid(row=2, column=2)
num_unknowns_var = tk.StringVar()
num_unknowns_spinbox = tk.Spinbox(root, from_=1, to=10, textvariable=num_unknowns_var, command=update_entries)
num_unknowns_spinbox.grid(row=2, column=3)

# Tạo ô nhập liệu cho ma trận A và vector B dựa trên số lượng phương trình và số lượng ẩn đã chọn
A_entries = []
b_entries = []

def create_entries():
    for i in range(int(num_equations_var.get())):
        row_entries = []
        for j in range(int(num_unknowns_var.get())):
            label = tk.Label(root, text=f"A[{i + 1},{j + 1}]:")
            label.grid(row=i + 3, column=j * 2)
            entry = tk.Entry(root)
            entry.grid(row=i + 3, column=j * 2 + 1)
            row_entries.append((entry, label))
        A_entries.append(row_entries)

        label = tk.Label(root, text=f"B[{i + 1}]:")
        label.grid(row=i + 3, column=int(num_unknowns_var.get()) * 2)
        entry = tk.Entry(root)
        entry.grid(row=i + 3, column=int(num_unknowns_var.get()) * 2 + 1)
        b_entries.append((entry, label))
create_entries()

def xoa_nghiem_truoc():
    for entry_list in A_entries:
        for entry, label in entry_list:
            entry.delete(0, tk.END)

    for entry, label in b_entries:
        entry.delete(0, tk.END)

        label.config(text="")
def hien_thi_bang_nghiem(nghiem):
    new_window = tk.Toplevel(root)
    new_window.title("Bảng Nghiệm")
    for i in range(len(nghiem)):
        tk.Label(new_window, text=f"x{i + 1} = {nghiem[i]}").grid(row=i, column=0, padx=10, pady=5)

# Tạo nút giải phương trình
giai_pt_button = tk.Button(root, text="Giải Phương Trình", command=giai_pt_button_click)
giai_pt_button.grid(row=int(num_equations_var.get()) + 1, column=5, columnspan=int(num_unknowns_var.get()) + 1)

# Thêm nút và gán hàm xoa_nghiem_truoc cho nút này
xoa_nghiem_button = tk.Button(root, text="Xóa Nghiệm Trước", command=xoa_nghiem_truoc)
xoa_nghiem_button.grid(row=int(num_equations_var.get()) + 1, column=7, columnspan=int(num_unknowns_var.get()) + 1)

# Chạy vòng lặp chính của giao diện người dùng
root.mainloop()
