import sympy as sp
import tkinter as tk
from tkinter import messagebox
import webbrowser
import numpy as np
# Hàm để tính đạo hàm của một hàm số
def tinh_dao_ham():
    try:
        bieu_thuc = sp.simplify(bieu_thuc_entry.get())
        dao_ham = sp.diff(bieu_thuc)
        ket_qua_label.config(text="Đạo hàm của hàm số là: " + str(dao_ham))
    except Exception as e:
        messagebox.showerror("Lỗi","Lỗi, Không tính được đạo hàm")

# Hàm để tìm kiếm tài liệu học tập trên trình duyệt web
def tim_kiem_tai_lieu():
    query = bieu_thuc_entry.get() + " tài liệu giải tích "
    search_url = "https://www.google.com/search?q=" + query
    webbrowser.open(search_url)
def tinh_tich_phan():
    try:
        bieu_thuc = sp.simplify(bieu_thuc_entry.get())
        tich_phan = sp.integrate(bieu_thuc)
        ket_qua_label.config(text="Tích phân của hàm số là: " + str(tich_phan))
    except Exception as e:
        messagebox.showerror("Lỗi", "Lỗi, không tính được tích phân: ")
def ve_bieu_do():
    try:
        bieu_thuc = sp.simplify(bieu_thuc_entry.get())
        fig, ax = plt.subplots(figsize=(6, 4))
        x = sp.symbols('x')
        f = sp.lambdify(x, bieu_thuc, 'numpy')
        x_vals = np.linspace(-10, 10, 100)
        y_vals = f(x_vals)
        ax.plot(x_vals, y_vals, label=str(bieu_thuc))
        ax.legend()
        ax.set_title("Biểu đồ hàm số")
        ax.set_xlabel("x")
        ax.set_ylabel("y")

        # Hiển thị biểu đồ trong cửa sổ mới
        new_window = tk.Toplevel(root)
        new_window.title("Biểu đồ hàm số")
        canvas = FigureCanvasTkAgg(fig, master=new_window)
        canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand=1)
        canvas.draw()

    except Exception as e:
        messagebox.showerror("Lỗi","Lỗi, Nhập hàm số khác")


def tim_cuc_tri():
    try:
        bieu_thuc = sp.simplify(bieu_thuc_entry.get())
        diem_cuc_tri = sp.solve(sp.diff(bieu_thuc))
        ket_qua_label.config(text="Cực tiểu và cực đại là: " + str(diem_cuc_tri))
    except Exception as e:
        messagebox.showerror("Lỗi", "Lỗi, không tìm được cực trị")

def hien_thi_bang_gia_tri():
    try:
        bieu_thuc = sp.simplify(bieu_thuc_entry.get())
        x_vals = np.linspace(-10, 10, 10)
        gia_tri = [sp.N(bieu_thuc.subs(x, val)) for val in x_vals]
        dao_ham_gia_tri = [sp.N(sp.diff(bieu_thuc).subs(x, val)) for val in x_vals]

        # Hiển thị bảng giá trị trong cửa sổ mới
        new_window = tk.Toplevel(root)
        new_window.title("Bảng Giá Trị")

        gia_tri_label = tk.Label(new_window, text="Giá Trị Hàm Số")
        gia_tri_label.grid(row=0, column=0, padx=5, pady=5)
        dao_ham_label = tk.Label(new_window, text="Đạo Hàm")
        dao_ham_label.grid(row=0, column=1, padx=5, pady=5)

        for i in range(len(x_vals)):
            tk.Label(new_window, text=f"x={x_vals[i]}").grid(row=i + 1, column=0)
            tk.Label(new_window, text=f"{gia_tri[i]}").grid(row=i + 1, column=1)
            tk.Label(new_window, text=f"{dao_ham_gia_tri[i]}").grid(row=i + 1, column=2)

    except Exception as e:
        messagebox.showerror("Lỗi", "Lỗi xảy ra: " + str(e))


# Hàm để đóng ứng dụng
def thoat_chuong_trinh():
    root.destroy()

# Tạo cửa sổ giao diện
root = tk.Tk()
root.title("Chương trình Giải tích")

# Tạo và thiết lập các phần tử giao diện
bieu_thuc_label = tk.Label(root, text="Nhập biểu thức hàm số:")
bieu_thuc_label.grid(row=0, column=0, padx=10, pady=10)

bieu_thuc_entry = tk.Entry(root, width=40)
bieu_thuc_entry.grid(row=0, column=1, padx=10, pady=10)

tinh_dao_ham_button = tk.Button(root, text="Tính đạo hàm", command=tinh_dao_ham)
tinh_dao_ham_button.grid(row=1, column=0, columnspan=2, padx=10, pady=10)

tinh_tich_phan_button = tk.Button(root, text="Tính tích phân", command=tinh_tich_phan)
tinh_tich_phan_button.grid(row=2, column=0, columnspan=2, padx=10, pady=10)

tim_kiem_button = tk.Button(root, text="Tìm tài liệu học tập", command=tim_kiem_tai_lieu)
tim_kiem_button.grid(row=3, column=0, columnspan=2, padx=10, pady=10)

bieu_do_button = tk.Button(root, text="Hiển thị Biểu đồ", command=ve_bieu_do)
bieu_do_button.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

cuc_tri_button = tk.Button(root, text="Tìm Cực Tiểu và Cực Đại", command=tim_cuc_tri)
cuc_tri_button.grid(row=5, column=0, columnspan=2, padx=10, pady=10)

bang_gia_tri_button = tk.Button(root, text="Hiển Thị Bảng Giá Trị", command=hien_thi_bang_gia_tri)
bang_gia_tri_button.grid(row=6, column=0, columnspan=2, padx=10, pady=10)

thoat_button = tk.Button(root, text="Thoát", command=thoat_chuong_trinh)
thoat_button.grid(row=7, column=0, columnspan=2, padx=10, pady=10)

ket_qua_label = tk.Label(root, text="", wraplength=300)
ket_qua_label.grid(row=8, column=0, columnspan=2, padx=10, pady=10)
# Bắt đầu chương trình
root.mainloop()
